[{"categories":["前端"],"content":"照例官方文档安装脚手架并且初始化项目 app.js中App的初始化已去除new Vue来创建实例, 可直接使用对象来初始化 项目中vuex可照常使用 可在项目的 config文件夹下的dev``prod文件内设置defineConstants字段来使用不同环境下的变量 但要注意 json字段的[key]值必须是number 或者JSON.stringify(xx)类型 项目中如果使用css预编译器 不能在app的样式文件中定义mixin 可单独创建预编译文件通过config下的index文件中样式属性设置来引入 这样可在全局调用到 ","date":"2021-05-26","objectID":"/006/:0:0","tags":["taro","前端"],"title":"taro3.x版本使用vue2.x版本注意事项","uri":"/006/"},{"categories":["前端"],"content":" @charset \"utf-8\"; * { -webkit-box-sizing: border-box; box-sizing: border-box; } /*禁止文本缩放 字体设置 取消touch高亮效果 */ html { width: 100%; height: 100%; margin: 0; padding: 0; -webkit-text-size-adjust: 100%; font-family: system-ui, -apple-system, BlinkMacSystemFont, segoe ui, Roboto, Helvetica, Arial, sans-serif, apple color emoji, segoe ui emoji, segoe ui symbol; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); background: transparent; } body { width: 100%; height: 100%; overflow: scroll; -webkit-overflow-scrolling: touch; background: #fff; } body, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, legend, input, textarea, p, blockquote, th, td, hr, button, article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, label, summary { margin: 0; padding: 0; color: #1a1a1a; /* touch-action: none; */ } /*清除输入框内阴影 */ input, select, textarea { border: 0; -webkit-appearance: none; appearance: none; background-color: transparent; outline: none; -webkit-tap-highlight-color: rgba(255, 255, 255, 0); -webkit-focus-ring-color: rgba(0, 0, 0, 0); } ol, ul { list-style: none; } /*禁止选中文本内容*/ *:not(input, select, textarea) { -webkit-user-select: none; } /*禁用长按页面时的弹出菜单(iOS下有效) ,img和a标签都要加*/ img, a { -webkit-touch-callout: none; } a, a:active, a:hover { text-decoration: none; } /* 去掉点击链接和文本框对象时默认的灰色半透明覆盖层(iOS)或者虚框(Android)*/ a, button, input, textarea { -webkit-tap-highlight-color: rgba(0, 0, 0, 0); } button { outline: none; border: 1px solid transparent; } em, i { font-style: normal; } ","date":"2021-03-12","objectID":"/004/:0:0","tags":["css","前端"],"title":"重置css样式","uri":"/004/"},{"categories":["前端"],"content":" scrollingElement 该对象可以非常兼容地获取 scrollTop、scrollHeight 等属性，在移动端跟 PC 端都屡试不爽document.scrollingElement.scrollHeight标准模式返回 documentElement，怪异模式返回 body 滚动到底部 window.scrollTo({ left: 0, top: document.scrollingElement.scrollHeight }); 判断浏览器已滚动到底部 window.addEventListener(\"scroll\", () =\u003e { const { scrollTop, scrollHeight, clientHeight } = document.scrollingElement; // 当前滚动高度 + 视口高度 \u003e= 文档总高度 if (scrollTop + clientHeight \u003e= scrollHeight) { console.log(\"已到达底部\"); } }); ios设备局部滚动不顺畅 .box { -webkit-overflow-scrolling: touch; } 滚动传播 指有多个滚动区域，当一个滚动区域滚动完之后，继续滚动会传播到到父区域继续滚动的行为 .box { overscroll-behavior: contain; // 阻止滚动传播 } 滚动结束后强制滚动到指定元素 ul { scroll-snap-type: x mandatory; li { scroll-snap-align: start; } } 移动端适配 html { font-size: 13.3333vw; } input的placeholder样式 input输入框的placeholder在移动端并非垂直居中 尤其不要尝试用height === line-height(这个会出现光标问题) 此时给input 添加属性line-height:normal可解决 滑动穿透 document.querySelector(“.mask\").addEventListener(\"touchmove\", event =\u003e { event.preventDefault(); }) 在vue中也可以直接使用`@touchumove.prevent` ios上input失焦后未回弹 focus() { this.scrollTop = document.scrollingElement.scrollTop }, blur() { document.scrollingElement.scrollTo(0, this.scrollTop) } 网页忽略自动识别 \u003c!— 忽略浏览器自动识别数字为电话号码 —\u003e \u003cmeta name=\"format-detection\" content=\"telephone=no\" /\u003e \u003c!-- 忽略浏览器自动识别邮箱账号 --\u003e \u003cmeta name=\"format-detection\" content=\"email=no\" /\u003e 弹出数字键盘 \u003c!— 有”#\" \"*\"符”输入 ——\u003e \u003cinput type=\"tel\" novalidate=\"novalidate\" pattern=\"[0-9]*\" /\u003e type=\"tel\", 是 HTML5 的一个属性, 表示输入框类型为电话号码, 在 Android 和 IOS上表现差不多, 都会有数字键盘, 但是也会有字母, 略显多余 pattern=\"[0-9]\", pattern 用于验证表单输入的内容, 通常 HTML5 的 type 属性, 比如email、tel、number、data 类、url 等, 已经自带了简单的数据格式验证功能了, 加上pattern 后, 前端部分的验证更加简单高效了。IOS 中, 只有 [0-9]\\*才可以调起九宫格数字键盘, \\d 无效, Android 4.4以下（包括X5内核）, 两者都调起数字键盘 novalidate=\"novalidate\", novalidate属性规定当提交表单时不对其进行验证, 由于 pattern校验兼容性不好, 可以不让其校验, 只让其唤起纯数字键盘, 校验工作由 js 去做 \u003c!— 纯数字 --\u003e \u003cinput pattern=\"“\\d*”\" /\u003e 解决伪类失效 \u003cbody ontouchstart \u003e\u003c/body\u003e 网页状态栏背景色 apple-mobile-web-app-capable是设置Web应用是否以全屏模式运行;语法: \u003cmeta name=\"apple-mobile-web-app-capable\" content=\"yes\" /\u003e //content设置为yes Web应用会以全屏模式 \u003cmeta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" /\u003e ios键盘默认首字母大写解决方案 \u003cinput autocapitalize=“off\" autocorrect=\"off\" /\u003e ios上使用input但弹出自定义键盘 input 的 readonly属性 在 ios 下 获取焦点时仍会弹出虚拟键盘 此时使用unselectable=“on” onfocus=“this.blur()“解决 安卓上弹出的键盘覆盖文本框 安卓微信 H5 弹出软键盘后挡住 input 输入框 也可以在文本框获取焦点时不判断机型 直接加延时 focus(){ let u = navigator.userAgent, app = navigator.appVersion; let isAndroid = u.indexOf('Android') \u003e -1 || u.indexOf('Linux') \u003e -1; if(isAndroid){ setTimeout(function() { document.activeElement.scrollIntoViewIfNeeded(); document.activeElement.scrollIntoView(); }, 500); } } 锚点跳转 scrollIntoView()中可以传入Boolean类型的参数，默认是true，就是滚动定位到浏览器的顶部，如果传入false，就是滚动定位到浏览器的底部 document.getElementById(IdSlector).scrollIntoView(); scrollIntoView文档 ","date":"2021-03-12","objectID":"/003/:0:0","tags":["js","css"],"title":"页面滚动","uri":"/003/"},{"categories":["前端"],"content":" KeyDown 触发后，不一定触发 KeyUp，当 KeyDown 按下后，拖动鼠标，那么将不会触发 KeyUp 事件。 KeyPress 主要用来捕获数字(注意：包括 Shift+数字的符号)、字母（注意：包括大小写）、小键盘等除了 F1-12、SHIFT、Alt、Ctrl、Insert、Home、PgUp、Delete、End、PgDn、ScrollLock 、Pause、NumLock、{菜单键}、{开始键}和方向键外的 ANSI 字符 KeyDown 和 KeyUp 通常可以捕获键盘除了 PrScrn 所有按键(这里不讨论特殊键盘的特殊键） KeyPress 只能捕获单个字符 KeyDown 和 KeyUp 可以捕获组合键。 KeyPress 可以捕获单个字符的大小写 KeyDown 和 KeyUp 对于单个字符捕获的 KeyValue 都是一个值，也就是不能判断单个字符的大小写。 KeyPress 不区分小键盘和主键盘的数字字符。 KeyDown 和 KeyUp 区分小键盘和主键盘的数字字符。 其中 PrScrn 按键 KeyPress、KeyDown 和 KeyUp 都不能捕获。 在使用键盘的时候，通常会使用到 CTRL+SHIFT+ALT 类似的组合键功能。对于此，我们如何来判定？ 通过 KeyUp 事件能够来处理（这里说明一下为什么不用 KeyDown，因为在判定 KeyDown 的时候，CTRL、SHIFT 和 ALT 属于一直按下状态，然后再加另外一个键是不能准确捕获组合键，所以使用 KeyDown 是不能准确判断出的，要通过 KeyUp 事件来判定 ） ","date":"2021-03-12","objectID":"/002/:0:0","tags":["keycode","按键事件","js"],"title":"键盘按键事件详解","uri":"/002/"},{"categories":["前端"],"content":" 数组中根据对象某一属性排序 function compare(property) { return function(a, b) { var value1 = a[property]; var value2 = b[property]; return value1 - value2; }; } 数据去重 function removeRepeatArray(arr) { return arr.filter(function(item, index, self) { return self.indexOf(item) === index; }); } 数组打乱顺序 function upsetArr(arr) { return arr.sort(function() { return Math.random() - 0.5; }); } 绑定回车事件 document.doucumentElement.onkeydown = e =\u003e { let ecode = e.keyCode ? e.keyCode : e.which ? e.which : e.charCode; if (ecode === 13) { // do something } }; 移动端适配 var rem = { baseRem: 40, // 基准字号，按照iphone6应该为20，此处扩大2倍，便于计算 baseWidth: 750, // 基准尺寸宽，此处是按照ihpone6的尺寸 rootEle: document.getElementsByTagName(\"html\")[0], initHandle: function() { this.setRemHandle(); this.resizeHandle(); }, setRemHandle: function() { var clientWidth = document.documentElement.clientWidth || document.body.clientWidth; this.rootEle.style.fontSize = (clientWidth * this.baseRem) / this.baseWidth + \"px\"; }, resizeHandle: function() { var that = this; window.addEventListener(\"resize\", function() { setTimeout(function() { that.setRemHandle(); }, 300); }); } }; rem.initHandle(); ios弹出键盘遮挡表单 window.addEventListener(\"resize\", function() { if ( document.activeElement.tagName === \"INPUT\" || document.activeElement.tagName === \"TEXTAREA\" || document.activeElement.getAttribute(\"contenteditable\") == \"true\" ) { window.setTimeout(function() { if (\"scrollIntoView\" in document.activeElement) { document.activeElement.scrollIntoView(); } else { document.activeElement.scrollIntoViewIfNeeded(); } }, 0); } }); ","date":"2021-03-12","objectID":"/001/:0:0","tags":["js","前端"],"title":"js的一些tips","uri":"/001/"},{"categories":["前端"],"content":" 消除taransition闪屏 .css { transform: translate3d(0,0,0); } 全局背景图 html { background: url('bg.jpg') no-repeat center center fixed; background-size: cover; } 自定义文本选择 ::selection{background: red;} 使页面字体变细变清晰 -webkit-font-smoothing: antialiased; 长按禁止 // 禁止长按图片保存 img { -webkit-touch-callout: none; pointer-events: none; // 像微信浏览器还是无法禁止，加上这行样式即可 } // 禁止长按选择文字 div { -webkit-user-select: none; } // 禁止长按呼出菜单 div { -webkit-touch-callout: none; } 修改谷歌浏览器记住密码后的自动填充表单背景色 input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill { background-color: rgb(250, 255, 189); /* #FAFFBD; */ background-image: none; color: rgb(0, 0, 0); } 文本两端对齐 div { width: 100px; padding: 0 10px; background: pink; margin-bottom: 10px; text-align-last: justify; } 图片显示方式 img { /* fill | contain | cover | none | scale-down */ object-fit: cover; } 修改滚动条样式 div::-webkit-scrollbar { /* 这里的宽是指竖向滚动条的宽，高是指横向滚动条的高*/ width: 16px; height: 16px; background: pink; } div::-webkit-scrollbar-thumb { border-radius: 10px; background: linear-gradient(red, orange); } sass内深度选择器未生效 尝试以下三种方式 /deep/ \u003e\u003e\u003e ::v-deep 1px线 .clear-fix { \u0026::after { content: \"\"; display: table; clear: both; } } .border-top-1px, .border-right-1px, .border-bottom-1px, .border-left-1px { position: relative; \u0026::before, \u0026::after { content: \"\"; display: block; position: absolute; transform-origin: 0 0; } } $color-row-line: #ebebeb; $color-col-line: #ebebeb; .border-top-1px { \u0026::before { border-top: 1px solid $color-row-line; left: 0; top: 0; width: 100%; transform-origin: 0 top; } } .border-right-1px { \u0026::after { border-right: 1px solid $color-col-line; top: 0; right: 0; height: 100%; transform-origin: right 0; } } .border-bottom-1px { \u0026::after { border-bottom: 1px solid $color-row-line; left: 0; bottom: 0; width: 100%; transform-origin: 0 bottom; } } .border-left-1px { \u0026::before { border-left: 1px solid $color-col-line; top: 0; left: 0; height: 100%; transform-origin: left 0; } } @media (min-resolution: 2dppx) { .border-top-1px { \u0026::before { width: 200%; transform: scale(0.5) translateZ(0); } } .border-right-1px { \u0026::after { height: 200%; transform: scale(0.5) translateZ(0); } } .border-bottom-1px { \u0026::after { width: 200%; transform: scale(0.5) translateZ(0); } } .border-left-1px { \u0026::before { height: 200%; transform: scale(0.5) translateZ(0); } } } @media (min-resolution: 3dppx) { .border-top-1px { \u0026::before { width: 300%; transform: scale(0.333) translateZ(0); } } .border-right-1px { \u0026::after { height: 300%; transform: scale(0.333) translateZ(0); } } .border-bottom-1px { \u0026::after { width: 300%; transform: scale(0.333) translateZ(0); } } .border-left-1px { \u0026::before { height: 300%; transform: scale(0.333) translateZ(0); } } } ","date":"2021-03-12","objectID":"/005/:0:0","tags":["css","前端"],"title":"css的一些tips","uri":"/005/"},{"categories":null,"content":"喜欢音乐 喜欢旅行 喜欢发呆 所有想象 都是记忆 ","date":"2021-03-12","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"}]